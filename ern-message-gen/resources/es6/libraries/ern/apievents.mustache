
export default class {{{baseName}}}Events {
    constructor(bridge) {
        this._bridge = bridge;
    }

    {{#operations}}
    {{#operation}}
    {{#isEvent}}
    add{{{camelizedNickName}}}EventListener( eventListener) {
      return   this._bridge.registerEventListener("{{package}}.request.{{operationId}}",eventListener);
    }
    {{/isEvent}}
    {{/operation}}
    {{/operations}}

    //------------------------------------------------------------------------------------------------------------------------------------

{{#operations}}
    {{#operation}}
        {{#isEvent}}
            emit{{camelizedNickName}}({{_argList}}{{#_argList}},{{/_argList}}dispatchMode) {
            {{^allParams.0}}
                return this._bridge.emitEvent("{{package}}.event.{{operationId}}", null, dispatchMode);
            {{/allParams.0}}
            {{>_methodBody}}
             {{#allParams.0}}
                return this._bridge.emitEvent("{{package}}.event.{{operationId}}", {{>_invokeWithParams}})
            {{/allParams.0}}
            }
        {{/isEvent}}
    {{/operation}}
{{/operations}}
}
