
export default class {{{baseName}}}Events {
    constructor(bridge) {
        this._bridge = bridge;
    }

    {{#operations}}
    {{#operation}}
    {{#isEvent}}
    add{{{camelizedNickName}}}EventListener( eventListener) {
      return   this._bridge.registerEventListener("{{package}}.request.{{operationId}}",eventListener);
    }
    {{/isEvent}}
    {{/operation}}
    {{/operations}}

    //------------------------------------------------------------------------------------------------------------------------------------

{{#operations}}
    {{#operation}}
        {{#isEvent}}
            emit{{camelizedNickName}}({{_argList}}{{#_argList}},{{/_argList}}timeout) {
            {{^hasParams}}
                return this._bridge.emitEvent("{{package}}.event.{{operationId}}", { timeout });
            {{/hasParams}}
            {{>_methodBody}}
             {{#hasParams}}
                return this._bridge.emitEvent("{{package}}.event.{{operationId}}",  { data, timeout })
            {{/hasParams}}
            }
        {{/isEvent}}
    {{/operation}}
{{/operations}}
}
