{{#isClassy}}
import ApiClient from '../ApiClient';

{{#imports}}import {{import}} from '../{{#modelPackage}}{{&modelPackage}}/{{/modelPackage}}{{import}}';
{{/imports}}

{{/isClassy}}

export default class {{{baseName}}}Requests {
    constructor(bridge) {
     this._bridge = bridge;
    }

    {{#operations}}
    {{#operation}}
    {{^isEvent}}
        /**
         * Registers a handler for a particular api.  This allows javascript to handle a request from native.
         * @param function tak
         */
    register{{{camelizedNickName}}}RequestHandler( handler) {
        this._bridge.registerRequestHandler("{{package}}.request.{{operationId}}", handler);
    }
    {{/isEvent}}
    {{/operation}}
    {{/operations}}

    //------------------------------------------------------------------------------------------------------------------------------------

    {{#operations}}
    {{#operation}}
    {{^isEvent}}
        {{#emitJSDoc}}

    /**{{#summary}}
      * {{&summary}}{{/summary}}{{#notes}}
      * {{&notes}}{{/notes}}{{#allParams}}{{#required}}
      * @param {{{&_jsDocType}}} {{paramName}} {{&description}}{{/required}}{{/allParams}}{{#hasOptionalParams}}
      * @param {Object} opts Optional parameters{{#allParams}}{{^required}}
      * @param {{{&_jsDocType}}} opts.{{paramName}} {{&description}}{{#defaultValue}} (default to {{.}}){{/defaultValue}}{{/required}}{{/allParams}}{{/hasOptionalParams}}
      * @param integer dispatchmode 0-Native, 1-JS, 2-GLOBAL (defaults to 0)
      * @return {Promise} a {@link https://www.promisejs.org/|Promise}{{#returnType}}, with data of type {@link {{&_jsDocType}} }{{/returnType}}
      */
    {{/emitJSDoc}}

     {{nickname}}({{_argList}}{{#_argList}},{{/_argList}}dispatchMode) {
        {{^allParams.0}}
            return this._bridge.sendRequest("{{package}}.request.{{operationId}}", null, dispatchMode);
        {{/allParams.0}}
        {{>_methodBody}}
        {{#allParams.0}}
        return this._bridge.sendRequest("{{package}}.request.{{operationId}}",{{>_invokeWithParams}}){{#isClassy}}
            {{#returnType}}
            .then(ApiClient.deserializer({{returnType}}));
            {{/returnType}}
        {{/isClassy}}
        {{/allParams.0}}

    }
    {{/isEvent}}
    {{/operation}}
    {{/operations}}
}
